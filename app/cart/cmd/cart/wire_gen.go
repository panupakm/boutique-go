// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/panupakm/boutique-go/app/cart/internal/biz"
	"github.com/panupakm/boutique-go/app/cart/internal/conf"
	"github.com/panupakm/boutique-go/app/cart/internal/data"
	"github.com/panupakm/boutique-go/app/cart/internal/server"
	"github.com/panupakm/boutique-go/app/cart/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	cmdable := data.NewRedisCmd(confData, logger)
	dataData, cleanup, err := data.NewData(cmdable, logger)
	if err != nil {
		return nil, nil, err
	}
	cartRepo := data.NewCartRepo(dataData, logger)
	cartUsecase := biz.NewCartUsecase(cartRepo, logger)
	cartServiceService := service.NewCartServiceService(cartUsecase, logger)
	grpcServer := server.NewGRPCServer(confServer, cartServiceService, logger)
	httpServer := server.NewHTTPServer(confServer, cartServiceService, logger)
	app := newApp(logger, grpcServer, httpServer)
	return app, func() {
		cleanup()
	}, nil
}
